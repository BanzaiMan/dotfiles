set backupdir=$TMPDIR,~/.vim-tmp,~/.tmp
set directory=$TMPDIR,~/.vim-tmp,~/.tmp

set colorcolumn=80
set scrolloff=3

set ignorecase
set smartcase

set background=dark

autocmd BufRead,BufNewFile *.pp setlocal tabstop=4 shiftwidth=4 expandtab list listchars=tab:>-,trail:.,extends:>

"flag problematic whitespace (trailing and spaces before tabs)
"Note you get the same by doing let c_space_errors=1 but
"this rule really applies to everything.
highlight RedundantSpaces term=standout ctermbg=red guibg=red
match RedundantSpaces /\s\+$\| \+\ze\t/ "\ze sets end of match so only spaces highlighted

"autocmd vimenter * if !argc() | NERDTree | endif
"autocmd vimenter * NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" Powerline
let g:Powerline_symbols = 'fancy'

" evaluate the current line in ruby
function LineEvalRuby()
  ruby <<EOF
  win = VIM::Window.current
  buf = win.buffer
  row = win.cursor[0] # current row
  result = eval buf[row]
  buf[row] += " # => #{result}"
EOF
endfunction

nmap <leader>ev :call LineEvalRuby()<CR>

"folding settings
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use

set noignorecase

"let NERDTreeQuitOnOpen = 1
let NERDTreeAutoDeleteBuffer = 1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeShowHidden = 1

call janus#add_mapping('nerdcommenter', 'map', '<leader>/', '<plug>NERDCommenterToggle<CR>')
call janus#add_mapping('nerdcommenter', 'imap', '<leader>/', '<Esc><plug>NERDCommenterToggle<CR>i')
