# Colors
autoload -U colors
colors
setopt prompt_subst
setopt +o nomatch

# powerline
if [ -f /usr/local/lib/python3.7/site-packages/powerline/bindings/zsh/powerline.zsh ]; then
  . /usr/local/lib/python3.7/site-packages/powerline/bindings/zsh/powerline.zsh
fi

# Prompt
local dollar="%(?,%{$fg[green]%},%{$fg[red]%})$%{$reset_color%}"

PROMPT='%m[%{$fg[blue]%}%{$bg[white]%}%~%{$reset_color%}]${dollar} %{$reset_color%}'
PROMPT="$PROMPT"'$([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#I_#P") "$PWD")'

#RPROMPT='%{$fg[white]%} $(~/.rvm/bin/rvm-prompt u v p s g)$(/usr/local/bin/vcprompt -f " [%n:%m%u%b%r]")%{$reset_color%}'
#RPROMPT='%{$fg[white]%} $(~/.rvm/bin/rvm-prompt u v p s g)$($HOME/personal/bin/git-cwd-info.rb)%{$reset_color%}'

# Show completion on first TAB
#setopt menucomplete

# set up PATH and such
# DEFAULT_PATH=$PATH
# export PATH=/usr/local/sbin:/usr/local/bin:/usr/local/share/python3:$DEFAULT_PATH:$HOME/personal/bin:/usr/local/jruby/bin:/usr/local/ruby19/bin:/usr/local/ruby18/bin:/usr/local/postgresql/9.1/bin:$HOME/personal/perlbrew/bin
#
# unset DEFALUT_PATH

export PATH=$PATH:${$(perl -e 'print $^X')%/*} # add perl's bin dir, wherever it is.

cdpath=($HOME/Development/src/travis-ci)

# Fix Homebrew zsh command completions
for f in $(find $(find /usr/local/Homebrew/completions -name completions) -type f -ipath \*\*/zsh/\*\*); do
  ln -sf $f $(brew --prefix)/share/zsh/site-functions/$(basename $f)
done

# Load completions for Ruby, Git, etc.
autoload compinit
compinit

## history options
setopt HIST_IGNORE_DUPS
setopt INC_APPEND_HISTORY
setopt HIST_SAVE_NO_DUPS
setopt HIST_REDUCE_BLANKS
setopt EXTENDED_HISTORY

#PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

test -s $HOME/.fresh/build/shell.sh && source $HOME/.fresh/build/shell.sh

# # Initialization for FDK command line tools.Mon Sep 24 22:33:53 2012
# FDK_EXE="/Users/asari/personal/bin/FDK/Tools/osx"
# PATH=${PATH}:"/Users/asari/personal/bin/FDK/Tools/osx"
# PATH=${PATH}:"/usr/local/google-cloud-sdk/bin"
# export PATH
# export FDK_EXE

# prompt
function pc {
  if [ -z $RPROMPT ]; then
    return
  fi
  _P=$PROMPT
  _R=$RPROMPT

  PROMPT='$ '
  unset RPROMPT
}

function pr {
  if [ -z $_P ]; then
    return
  fi
  PROMPT=$_P
  RPROMPT=$_R
  unset _P
  unset _R
}

function gsq {
  if [ -z $1 ]; then
    git rebase -i HEAD~$1
  fi
}

function latest_tag_for {
  local repo=$1
  tag=$(docker images | awk "/${repo}/ { print \$2 }" | head -1)
  if [[ -n $tag ]]; then
    echo $tag
  else
    echo "No image found" >>/dev/stderr
    false
  fi
}

function dkr {
  local image=$1
  cid=$(docker run -dti --privileged=true --entrypoint=/sbin/init -v /sys/fs/cgroup:/sys/fs/cgroup:ro travisci/ci-${image}:$(latest_tag_for ${image}))
  docker exec -it $cid /bin/bash
  docker stop $cid
}

function dkrta {
  dkr amethyst
}

function dkrtg {
  dkr garnet
}

function dkrx {
  dkr sardonyx
}

# man
# https://wiki.archlinux.org/index.php/Man_Page#Using_less_.28Recommended.29
# https://en.wikipedia.org/wiki/ANSI_escape_code#CSI_codes
man() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;34m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[4;35m") \
      man "$@"
}
